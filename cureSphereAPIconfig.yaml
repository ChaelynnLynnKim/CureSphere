swagger: '2.0'
info:
  title: CureSphere API configuration YAML
  version: 1.0.0
  description: All of the API functionalities necessary for the implementation of CureShpere.
schemes:
  - https
consumes:
  - application/x-www-form-urlencoded
  - application/json
produces:
  - application/json
paths:
  /chatbot:
    post:
      summary: The endpoint for the Natural Language Understanding API.
      description: |
        This API takes in one or more messages from the client and returns
        one or more messages as a response. The API leverages the NLP
        backend functionality, paired with state and profile information
        and returns a context-aware reply.
      tags:
        - NLU
      operationId: sendMessage
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BotRequest'
      responses:
        '200':
          description: A Chatbot response
          schema:
            $ref: '#/definitions/BotResponse'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /createPatient:
    post:
      summary: Create a new patient record
      description: Creates a new patient record with the provided information
      operationId: createPatient
      parameters:
        - name: firstName
          in: header
          description: The first name of the patient
          required: true
          type: string
        - name: lastName
          in: header
          description: The last name of the patient
          required: true
          type: string
        - name: age
          in: header
          description: The age of the patient
          required: true
          type: integer
        - name: gender
          in: header
          description: The gender of the patient
          required: true
          type: string
        - name: insurance_provider
          in: header
          description: The insurance provider of the patient
          required: true
          type: string
        - name: city
          in: header
          description: The city of the patient
          required: true
          type: string
        - name: zip_code
          in: header
          description: The zip code of the patient
          required: true
          type: string
        - name: email
          in: header
          description: The email address of the patient
          required: true
          type: string
      responses:
        '200':
          description: Successfully created patient record
          schema:
            type: object
            properties:
              user_id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              age:
                type: integer
              gender:
                type: string
              insurance_provider:
                type: string
              city:
                type: string
              zip_code:
                type: string
              email:
                type: string
        '400':
          description: Error in creating patient record
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /createDoctor:
    post:
      summary: Register a new doctor record
      description: Creates a new doctor record with the provided information
      operationId: createDoctor
      parameters:
        - name: firstName
          in: header
          description: The first name of the doctor
          required: true
          type: string
        - name: lastName
          in: header
          description: The last name of the doctor
          required: true
          type: string
        - name: department
          in: header
          description: The department of the doctor
          required: true
          type: string
        - name: specialties
          in: header
          description: The specialty of the doctor
          required: true
          type: array
          items:
              type: string
              format: string
        - name: available_days
          in: header
          description: The available days in the week for the doctor
          required: true
          type: array
          items:
              type: string
              format: string
        - name: available_time_slots
          in: header
          description: The available time slots of the doctor
          required: true
          type: array
          items:
              type: string
              format: string
        - name: city
          in: header
          description: The city of the doctor's clinic
          required: true
          type: string
        - name: clinic_zip_code
          in: header
          description: The zip code of the doctor's clinic
          required: true
          type: string
        - name: email
          in: header
          description: The email address of the doctor
          required: true
          type: string
      responses:
        '200':
          description: Successfully registered doctor
          schema:
            type: object
            properties:
              user_id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              department:
                type: string
              specialty:
                type: string
              available_days:
                type: array
                items:
                  type: string
                  format: string
              available_time_slots:
                type: array
                items:
                  type: string
                  format: date-time
              city:
                type: string
              zip_code:
                type: string
              email:
                type: string
        '400':
          description: Error in registering doctor
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /getAppointment:
    get:
      description: Retrieve the whole records of appointments
      operationId: getAppointment
      produces:
        - application/json
      parameters:
        - name: email
          in: header
          description: user email (user id)
          required: true
          type: string

        - name: role
          in: header
          description: doctor or patient
          required: true
          type: string

        - name: appointment_type
          in: header
          description: past or current
          required: true
          type: string

      responses:
        '200':
          description: appointments retrieved successfully
          schema:
            type: object
            properties:
              feedback:
                type: string
        '404':
          description: No appointments found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /patients/{id}:
    get:
      summary: Retrieve the patient information
      operationId: getPatient
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the patient
          required: true
          type: string
      responses:
        '200':
          description: Successfully fetched patient record
          schema:
            type: object
            properties:
              user_id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              age:
                type: integer
              gender:
                type: string
              insurance_provider:
                type: string
              city:
                type: string
              zip_code:
                type: string
              email:
                type: string
        '400':
          description: Patient ID not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  
  /doctors/{id}:
    get:
      summary: Retrieve the doctor information
      operationId: getDoctor
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the doctor
          required: true
          type: string
      responses:
        '200':
          description: Successfully fetched doctor
          schema:
            type: object
            properties:
              user_id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              department:
                type: string
              specialty:
                type: string
              available_days:
                type: array
                items:
                  type: string
                  format: string
              available_time_slots:
                type: array
                items:
                  type: string
                  format: date-time
              city:
                type: string
              zip_code:
                type: string
              email:
                type: string
        '400':
          description: Doctor ID not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string        

  /getMedicineComparison:
    get:
      description: refresh and get the most updated medicine name that the doctor inputted and then predefined some values in  to return the lowest five products with the same name
      operationId: getMedicineComparison
      parameters:
        - name: medicineName
          in: header
          description: the medicineName
          required: true
          type: string
      responses:
        '200':
          description: Successfully implemented medicine comparision
          schema:
            type: object
            properties:
              appointmentId:
                type: string
        '400':
          description: Error in implementing medicine comparision
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string

  /doctorInput:
    post:
      description: submitting medicine, feedback
      operationId: doctorInput
      parameters:
        - name: a_id
          in: header
          description: the unique appointment Id
          required: true
          type: string

        - name: feedback
          in: header
          description: feedback
          required: true
          type: string

        - name: medicine
          in: header
          description: medicine
          required: true
          type: string
      responses:
        '200':
          description: Successfully submitted medicine and feedback
          schema:
            type: object
            properties:
              appointmentId:
                type: string
        '400':
          description: Error in submitting book medicine and feedback
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string

  /bookAppointment:
    post:
      description: book appointment of doc and patient
      operationId: bookAppointment
      parameters:
        - name: patientId
          in: header
          description: the unique patientId
          required: true
          type: string

        - name: doctorId
          in: header
          description: the unique doctorId
          required: true
          type: string

        - name: Time
          in: header
          description: the timestamp in time
          required: true
          type: string

        - name: Date
          in: header
          description: the timestamp in date
          required: true
          type: string
      responses:
        '200':
          description: Successfully book appointment of doc and patient
          schema:
            type: object
            properties:
              appointmentId:
                type: string
        '400':
          description: Error in implementing book appointment of doc and patient
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  
  /getDoctorAvailability:
    get:
      description: get availability of doctor
      operationId: getDoctorAvailability
      parameters:
        - name: doctorId
          in: header
          description: the unique doctorId
          required: true
          type: string
          
        - name: date
          in: header
          description: Date in format mm/dd/yyyy
          required: true
          type: string
      responses:
        '200':
          description: Successfully obtained doctor availability
          schema:
            type: object
            properties:
              appointmentId:
                type: string
        '400':
          description: Invalid input, doctor unavailable
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string              

definitions:
    UnstructuredMessage:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        timestamp:
          type: string
          format: datetime
    Message:
        type: object
        properties:
          type:
            type: string
          unstructured:
            $ref: '#/definitions/UnstructuredMessage'
    BotRequest:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/definitions/Message'
    BotResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/definitions/Message'
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Medicine:
      type: object
      properties:
        name:
          type: string
        manufacturer:
          type: string
        strength:
          type: string
        form:
          type: string
    Feedback:
      type: object
      properties:
        Text:
          type: string
